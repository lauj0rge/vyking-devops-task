{{- if .Values.frontend.enabled }}
  {{- $root := . -}}
  {{- $frontend := $root.Values.frontend -}}
  {{- $name := include "vyking-app.frontendFullname" $root -}}
  {{- $namespace := default $root.Release.Namespace $frontend.namespace -}}
  {{- $backendNamespace := default $root.Release.Namespace $root.Values.backend.namespace -}}
  {{- $backendService := include "vyking-app.backendFullname" $root -}}
  {{- $backendHost := default (printf "%s.%s.svc.cluster.local" $backendService $backendNamespace) $frontend.backend.host -}}
  {{- $backendPort := default $root.Values.backend.service.port $frontend.backend.port -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ printf "%s-nginx-config" $name }}
  namespace: {{ $namespace }}
  labels:
    app: {{ $name }}
    component: frontend
    environment: {{ include "vyking-app.environment" $root }}
data:
  default.conf: |
    server {
      listen 80;
      server_name localhost;
    
      root /usr/share/nginx/html;
      index index.html index.htm;

      # Gzip compression
      gzip on;
      gzip_vary on;
      gzip_min_length 1024;
      gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

      # Security headers
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;

      # Serve static files with cache headers
      location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff2)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri $uri/ =404;
      }

      # Main application - no caching
      location / {
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
      }

      # Health check endpoint
      location /healthz {
        access_log off;
        add_header Content-Type text/plain;
        return 200 "healthy\n";
      }

      # Proxy API calls to backend with better timeouts
      location /api/ {
        proxy_pass http://{{ $backendHost }}:{{ $backendPort }}/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
    
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    
        # Remove trailing slash for consistency
        rewrite ^/api/(.*)$ /$1 break;
      }

      # Error pages
      error_page 500 502 503 504 /50x.html;
      location = /50x.html {
        root /usr/share/nginx/html;
      }
    }
  {{- end }}