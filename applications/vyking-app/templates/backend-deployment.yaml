{{- if .Values.backend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "vyking.backend.fullname" . }}
  namespace: {{ .Values.backend.namespace | default .Release.Namespace }}
  labels:
  {{ include "vyking.componentLabels" (dict "root" . "component" "backend" "values" .Values.backend) | indent 4 }}
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
  {{ include "vyking.componentSelectorLabels" (dict "root" . "component" "backend" "values" .Values.backend) | indent 6 }}
template:
  metadata:
    labels:
  {{ include "vyking.componentSelectorLabels" (dict "root" . "component" "backend" "values" .Values.backend) | indent 8 }}
environment: {{ include "vyking.environment" . }}
spec:
  containers:
    - name: backend
      image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
      imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
      ports:
        - containerPort: {{ .Values.backend.service.port }}
      env:
        - name: MYSQL_HOST
          valueFrom:
            secretKeyRef:
              name: {{ .Values.backend.mysql.secretName }}
              key: host
        - name: MYSQL_PORT
          valueFrom:
            secretKeyRef:
              name: {{ .Values.backend.mysql.secretName }}
              key: port
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.backend.mysql.secretName }}
              key: username
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.backend.mysql.secretName }}
              key: password
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: {{ .Values.backend.mysql.secretName }}
              key: database
      livenessProbe:
        httpGet:
          path: {{ .Values.backend.probes.liveness.path }}
          port: {{ .Values.backend.probes.liveness.port }}
        initialDelaySeconds: {{ .Values.backend.probes.liveness.initialDelaySeconds }}
        periodSeconds: {{ .Values.backend.probes.liveness.periodSeconds }}
        timeoutSeconds: {{ .Values.backend.probes.liveness.timeoutSeconds }}
        failureThreshold: {{ .Values.backend.probes.liveness.failureThreshold }}
      readinessProbe:
        httpGet:
          path: {{ .Values.backend.probes.readiness.path }}
          port: {{ .Values.backend.probes.readiness.port }}
        initialDelaySeconds: {{ .Values.backend.probes.readiness.initialDelaySeconds }}
        periodSeconds: {{ .Values.backend.probes.readiness.periodSeconds }}
        timeoutSeconds: {{ .Values.backend.probes.readiness.timeoutSeconds }}
        failureThreshold: {{ .Values.backend.probes.readiness.failureThreshold }}
      resources:
  {{ toYaml .Values.backend.resources | indent 12 }}
securityContext:
  {{ toYaml .Values.backend.securityContext | indent 12 }}
  {{- end }}