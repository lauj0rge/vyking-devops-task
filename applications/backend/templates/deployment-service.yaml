---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-deploy
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-deploy
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-deploy
    spec:
      containers:
          - name: backend
            image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            ports:
              - containerPort: {{ .Values.service.port }}
            env:
              - name: MYSQL_HOST
                valueFrom:
                  secretKeyRef:
                    name: mysql-credentials-{{ .Values.env }}
                    key: host
              - name: MYSQL_PORT
                valueFrom:
                  secretKeyRef:
                    name: mysql-credentials-{{ .Values.env }}
                    key: port
              - name: MYSQL_USER
                valueFrom:
                  secretKeyRef:
                    name: mysql-credentials-{{ .Values.env }}
                    key: username
              - name: MYSQL_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: mysql-credentials-{{ .Values.env }}
                    key: password
              - name: MYSQL_DATABASE
                valueFrom:
                  secretKeyRef:
                    name: mysql-credentials-{{ .Values.env }}
                    key: database
            livenessProbe:
              httpGet:
                path: {{ .Values.probes.liveness.path }}
                port: {{ .Values.probes.liveness.port | default .Values.service.port }}
              initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
              periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
              timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
              failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
            readinessProbe:
              httpGet:
                path: {{ .Values.probes.readiness.path }}
                port: {{ .Values.probes.readiness.port | default .Values.service.port }}
              initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
              periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
              timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
              failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
            resources:
              {{- toYaml .Values.resources | nindent 12 }}
            securityContext:
              {{- toYaml .Values.securityContext | nindent 12 }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-svc
spec:
  type: {{ .Values.service.type }}
  selector:
    app: {{ .Release.Name }}-svc
  ports:
      - port: {{ .Values.service.port }}
        targetPort: {{ .Values.service.port }}
